Terminals unused in grammar

   '['
   ']'


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: FDEFS

    2 $@1: %empty

    3 FDEFS: FDEFS FUNC_DEF_API $@1 BLK
    4      | FDEFS FUNC_DEC_API
    5      | %empty

    6 FUNC_DEC_API: TYPE ID '(' ')' ';'
    7             | TYPE ID '(' FUNC_ARGLIST ')' ';'
    8             | TYPE ID '(' FUNC_DEC_ARGLIST_OPT ')' ';'
    9             | TYPE ID '(' FUNC_ARGLIST ',' FUNC_DEC_ARGLIST_OPT ')' ';'

   10 FUNC_DEC_ARGLIST_OPT: FUNC_DEC_ARGLIST_OPT ',' DCL_OPT
   11                     | DCL_OPT

   12 DCL_OPT: ID ':' OPTIONAL TYPE
   13        | ID ',' DCL_OPT

   14 FUNC_DEF_API: TYPE ID '(' ')'
   15             | TYPE ID '(' FUNC_ARGLIST ')'
   16             | TYPE ID '(' FUNC_DEF_ARGLIST_OPT ')'
   17             | TYPE ID '(' FUNC_ARGLIST ',' FUNC_DEF_ARGLIST_OPT ')'

   18 FUNC_DEF_ARGLIST_OPT: FUNC_DEF_ARGLIST_OPT ',' DCL_OPT_VAL
   19                     | DCL_OPT_VAL

   20 DCL_OPT_VAL: ID ASSIGN NUM ':' OPTIONAL TYPE
   21            | ID ASSIGN NUM ',' DCL_OPT_VAL

   22 FUNC_ARGLIST: FUNC_ARGLIST ',' DCL
   23             | DCL

   24 $@2: %empty

   25 BLK: '{' $@2 STLIST '}'

   26 DCL: ID ':' TYPE
   27    | ID ',' DCL

   28 TYPE: INT
   29     | FLOAT
   30     | VOID

   31 STLIST: STLIST M STMT
   32       | %empty

   33 STMT: DCL ';'
   34     | ASSN
   35     | EXP ';'
   36     | CNTRL
   37     | read
   38     | write
   39     | return
   40     | BLK

   41 return: RETURN EXP ';'
   42       | RETURN ';'

   43 write: WRITE '(' EXP ')' ';'
   44      | WRITE '(' STR ')' ';'

   45 read: READ '(' LVAL ')' ';'

   46 ASSN: LVAL ASSIGN EXP ';'

   47 LVAL: ID

   48 CNTRL: IF BEXP THEN M STMT ELSE N M STMT
   49      | IF BEXP THEN M STMT
   50      | WHILE M BEXP DO M STMT

   51 BEXP: BEXP OR M BEXP
   52     | BEXP AND M BEXP
   53     | NOT BEXP
   54     | EXP RELOP EXP
   55     | '(' BEXP ')'

   56 EXP: EXP ADDOP EXP
   57    | EXP MULOP EXP
   58    | '(' EXP ')'
   59    | '(' TYPE ')' EXP
   60    | ID
   61    | NUM
   62    | CALL

   63 NUM: INTEGERNUM
   64    | REALNUM

   65 CALL: ID '(' CALL_ARGS ')'

   66 CALL_ARGS: CALL_ARGLIST
   67          | %empty

   68 CALL_ARGLIST: CALL_ARGLIST ',' EXP
   69             | EXP

   70 M: %empty

   71 N: %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 7 8 9 14 15 16 17 43 44 45 55 58 59 65
')' (41) 6 7 8 9 14 15 16 17 43 44 45 55 58 59 65
',' (44) 9 10 13 17 18 21 22 27 68
':' (58) 12 20 26
';' (59) 6 7 8 9 33 35 41 42 43 44 45 46
'[' (91)
']' (93)
'{' (123) 25
'}' (125) 25
error (256)
INT (258) 28
FLOAT (259) 29
VOID (260) 30
WRITE (261) 43 44
READ (262) 45
OPTIONAL (263) 12 20
WHILE (264) 50
DO (265) 50
IF (266) 48 49
RETURN (267) 41 42
ID (268) 6 7 8 9 12 13 14 15 16 17 20 21 26 27 47 60 65
INTEGERNUM (269) 63
REALNUM (270) 64
STR (271) 44
ASSIGN (272) 20 21 46
OR (273) 51
AND (274) 52
RELOP (275) 54
ADDOP (276) 56
MULOP (277) 57
NOT (278) 53
THEN (279) 48 49
ELSE (280) 48


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
PROGRAM (36)
    on left: 1, on right: 0
FDEFS (37)
    on left: 3 4 5, on right: 1 3 4
$@1 (38)
    on left: 2, on right: 3
FUNC_DEC_API (39)
    on left: 6 7 8 9, on right: 4
FUNC_DEC_ARGLIST_OPT (40)
    on left: 10 11, on right: 8 9 10
DCL_OPT (41)
    on left: 12 13, on right: 10 11 13
FUNC_DEF_API (42)
    on left: 14 15 16 17, on right: 3
FUNC_DEF_ARGLIST_OPT (43)
    on left: 18 19, on right: 16 17 18
DCL_OPT_VAL (44)
    on left: 20 21, on right: 18 19 21
FUNC_ARGLIST (45)
    on left: 22 23, on right: 7 9 15 17 22
BLK (46)
    on left: 25, on right: 3 40
$@2 (47)
    on left: 24, on right: 25
DCL (48)
    on left: 26 27, on right: 22 23 27 33
TYPE (49)
    on left: 28 29 30, on right: 6 7 8 9 12 14 15 16 17 20 26 59
STLIST (50)
    on left: 31 32, on right: 25 31
STMT (51)
    on left: 33 34 35 36 37 38 39 40, on right: 31 48 49 50
return (52)
    on left: 41 42, on right: 39
write (53)
    on left: 43 44, on right: 38
read (54)
    on left: 45, on right: 37
ASSN (55)
    on left: 46, on right: 34
LVAL (56)
    on left: 47, on right: 45 46
CNTRL (57)
    on left: 48 49 50, on right: 36
BEXP (58)
    on left: 51 52 53 54 55, on right: 48 49 50 51 52 53 55
EXP (59)
    on left: 56 57 58 59 60 61 62, on right: 35 41 43 46 54 56 57 58
    59 68 69
NUM (60)
    on left: 63 64, on right: 20 21 61
CALL (61)
    on left: 65, on right: 62
CALL_ARGS (62)
    on left: 66 67, on right: 65
CALL_ARGLIST (63)
    on left: 68 69, on right: 66 68
M (64)
    on left: 70, on right: 31 48 49 50 51 52
N (65)
    on left: 71, on right: 48


State 0

    0 $accept: . PROGRAM $end

    $default  reduce using rule 5 (FDEFS)

    PROGRAM  go to state 1
    FDEFS    go to state 2


State 1

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 3


State 2

    1 PROGRAM: FDEFS .
    3 FDEFS: FDEFS . FUNC_DEF_API $@1 BLK
    4      | FDEFS . FUNC_DEC_API

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    VOID   shift, and go to state 6

    $default  reduce using rule 1 (PROGRAM)

    FUNC_DEC_API  go to state 7
    FUNC_DEF_API  go to state 8
    TYPE          go to state 9


State 3

    0 $accept: PROGRAM $end .

    $default  accept


State 4

   28 TYPE: INT .

    $default  reduce using rule 28 (TYPE)


State 5

   29 TYPE: FLOAT .

    $default  reduce using rule 29 (TYPE)


State 6

   30 TYPE: VOID .

    $default  reduce using rule 30 (TYPE)


State 7

    4 FDEFS: FDEFS FUNC_DEC_API .

    $default  reduce using rule 4 (FDEFS)


State 8

    3 FDEFS: FDEFS FUNC_DEF_API . $@1 BLK

    $default  reduce using rule 2 ($@1)

    $@1  go to state 10


State 9

    6 FUNC_DEC_API: TYPE . ID '(' ')' ';'
    7             | TYPE . ID '(' FUNC_ARGLIST ')' ';'
    8             | TYPE . ID '(' FUNC_DEC_ARGLIST_OPT ')' ';'
    9             | TYPE . ID '(' FUNC_ARGLIST ',' FUNC_DEC_ARGLIST_OPT ')' ';'
   14 FUNC_DEF_API: TYPE . ID '(' ')'
   15             | TYPE . ID '(' FUNC_ARGLIST ')'
   16             | TYPE . ID '(' FUNC_DEF_ARGLIST_OPT ')'
   17             | TYPE . ID '(' FUNC_ARGLIST ',' FUNC_DEF_ARGLIST_OPT ')'

    ID  shift, and go to state 11


State 10

    3 FDEFS: FDEFS FUNC_DEF_API $@1 . BLK

    '{'  shift, and go to state 12

    BLK  go to state 13


State 11

    6 FUNC_DEC_API: TYPE ID . '(' ')' ';'
    7             | TYPE ID . '(' FUNC_ARGLIST ')' ';'
    8             | TYPE ID . '(' FUNC_DEC_ARGLIST_OPT ')' ';'
    9             | TYPE ID . '(' FUNC_ARGLIST ',' FUNC_DEC_ARGLIST_OPT ')' ';'
   14 FUNC_DEF_API: TYPE ID . '(' ')'
   15             | TYPE ID . '(' FUNC_ARGLIST ')'
   16             | TYPE ID . '(' FUNC_DEF_ARGLIST_OPT ')'
   17             | TYPE ID . '(' FUNC_ARGLIST ',' FUNC_DEF_ARGLIST_OPT ')'

    '('  shift, and go to state 14


State 12

   25 BLK: '{' . $@2 STLIST '}'

    $default  reduce using rule 24 ($@2)

    $@2  go to state 15


State 13

    3 FDEFS: FDEFS FUNC_DEF_API $@1 BLK .

    $default  reduce using rule 3 (FDEFS)


State 14

    6 FUNC_DEC_API: TYPE ID '(' . ')' ';'
    7             | TYPE ID '(' . FUNC_ARGLIST ')' ';'
    8             | TYPE ID '(' . FUNC_DEC_ARGLIST_OPT ')' ';'
    9             | TYPE ID '(' . FUNC_ARGLIST ',' FUNC_DEC_ARGLIST_OPT ')' ';'
   14 FUNC_DEF_API: TYPE ID '(' . ')'
   15             | TYPE ID '(' . FUNC_ARGLIST ')'
   16             | TYPE ID '(' . FUNC_DEF_ARGLIST_OPT ')'
   17             | TYPE ID '(' . FUNC_ARGLIST ',' FUNC_DEF_ARGLIST_OPT ')'

    ID   shift, and go to state 16
    ')'  shift, and go to state 17

    FUNC_DEC_ARGLIST_OPT  go to state 18
    DCL_OPT               go to state 19
    FUNC_DEF_ARGLIST_OPT  go to state 20
    DCL_OPT_VAL           go to state 21
    FUNC_ARGLIST          go to state 22
    DCL                   go to state 23


State 15

   25 BLK: '{' $@2 . STLIST '}'

    $default  reduce using rule 32 (STLIST)

    STLIST  go to state 24


State 16

   12 DCL_OPT: ID . ':' OPTIONAL TYPE
   13        | ID . ',' DCL_OPT
   20 DCL_OPT_VAL: ID . ASSIGN NUM ':' OPTIONAL TYPE
   21            | ID . ASSIGN NUM ',' DCL_OPT_VAL
   26 DCL: ID . ':' TYPE
   27    | ID . ',' DCL

    ','     shift, and go to state 25
    ':'     shift, and go to state 26
    ASSIGN  shift, and go to state 27


State 17

    6 FUNC_DEC_API: TYPE ID '(' ')' . ';'
   14 FUNC_DEF_API: TYPE ID '(' ')' .

    ';'  shift, and go to state 28

    $default  reduce using rule 14 (FUNC_DEF_API)


State 18

    8 FUNC_DEC_API: TYPE ID '(' FUNC_DEC_ARGLIST_OPT . ')' ';'
   10 FUNC_DEC_ARGLIST_OPT: FUNC_DEC_ARGLIST_OPT . ',' DCL_OPT

    ','  shift, and go to state 29
    ')'  shift, and go to state 30


State 19

   11 FUNC_DEC_ARGLIST_OPT: DCL_OPT .

    $default  reduce using rule 11 (FUNC_DEC_ARGLIST_OPT)


State 20

   16 FUNC_DEF_API: TYPE ID '(' FUNC_DEF_ARGLIST_OPT . ')'
   18 FUNC_DEF_ARGLIST_OPT: FUNC_DEF_ARGLIST_OPT . ',' DCL_OPT_VAL

    ','  shift, and go to state 31
    ')'  shift, and go to state 32


State 21

   19 FUNC_DEF_ARGLIST_OPT: DCL_OPT_VAL .

    $default  reduce using rule 19 (FUNC_DEF_ARGLIST_OPT)


State 22

    7 FUNC_DEC_API: TYPE ID '(' FUNC_ARGLIST . ')' ';'
    9             | TYPE ID '(' FUNC_ARGLIST . ',' FUNC_DEC_ARGLIST_OPT ')' ';'
   15 FUNC_DEF_API: TYPE ID '(' FUNC_ARGLIST . ')'
   17             | TYPE ID '(' FUNC_ARGLIST . ',' FUNC_DEF_ARGLIST_OPT ')'
   22 FUNC_ARGLIST: FUNC_ARGLIST . ',' DCL

    ','  shift, and go to state 33
    ')'  shift, and go to state 34


State 23

   23 FUNC_ARGLIST: DCL .

    $default  reduce using rule 23 (FUNC_ARGLIST)


State 24

   25 BLK: '{' $@2 STLIST . '}'
   31 STLIST: STLIST . M STMT

    '}'  shift, and go to state 35

    $default  reduce using rule 70 (M)

    M  go to state 36


State 25

   13 DCL_OPT: ID ',' . DCL_OPT
   27 DCL: ID ',' . DCL

    ID  shift, and go to state 37

    DCL_OPT  go to state 38
    DCL      go to state 39


State 26

   12 DCL_OPT: ID ':' . OPTIONAL TYPE
   26 DCL: ID ':' . TYPE

    INT       shift, and go to state 4
    FLOAT     shift, and go to state 5
    VOID      shift, and go to state 6
    OPTIONAL  shift, and go to state 40

    TYPE  go to state 41


State 27

   20 DCL_OPT_VAL: ID ASSIGN . NUM ':' OPTIONAL TYPE
   21            | ID ASSIGN . NUM ',' DCL_OPT_VAL

    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43

    NUM  go to state 44


State 28

    6 FUNC_DEC_API: TYPE ID '(' ')' ';' .

    $default  reduce using rule 6 (FUNC_DEC_API)


State 29

   10 FUNC_DEC_ARGLIST_OPT: FUNC_DEC_ARGLIST_OPT ',' . DCL_OPT

    ID  shift, and go to state 45

    DCL_OPT  go to state 46


State 30

    8 FUNC_DEC_API: TYPE ID '(' FUNC_DEC_ARGLIST_OPT ')' . ';'

    ';'  shift, and go to state 47


State 31

   18 FUNC_DEF_ARGLIST_OPT: FUNC_DEF_ARGLIST_OPT ',' . DCL_OPT_VAL

    ID  shift, and go to state 48

    DCL_OPT_VAL  go to state 49


State 32

   16 FUNC_DEF_API: TYPE ID '(' FUNC_DEF_ARGLIST_OPT ')' .

    $default  reduce using rule 16 (FUNC_DEF_API)


State 33

    9 FUNC_DEC_API: TYPE ID '(' FUNC_ARGLIST ',' . FUNC_DEC_ARGLIST_OPT ')' ';'
   17 FUNC_DEF_API: TYPE ID '(' FUNC_ARGLIST ',' . FUNC_DEF_ARGLIST_OPT ')'
   22 FUNC_ARGLIST: FUNC_ARGLIST ',' . DCL

    ID  shift, and go to state 16

    FUNC_DEC_ARGLIST_OPT  go to state 50
    DCL_OPT               go to state 19
    FUNC_DEF_ARGLIST_OPT  go to state 51
    DCL_OPT_VAL           go to state 21
    DCL                   go to state 52


State 34

    7 FUNC_DEC_API: TYPE ID '(' FUNC_ARGLIST ')' . ';'
   15 FUNC_DEF_API: TYPE ID '(' FUNC_ARGLIST ')' .

    ';'  shift, and go to state 53

    $default  reduce using rule 15 (FUNC_DEF_API)


State 35

   25 BLK: '{' $@2 STLIST '}' .

    $default  reduce using rule 25 (BLK)


State 36

   31 STLIST: STLIST M . STMT

    WRITE       shift, and go to state 54
    READ        shift, and go to state 55
    WHILE       shift, and go to state 56
    IF          shift, and go to state 57
    RETURN      shift, and go to state 58
    ID          shift, and go to state 59
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    '{'         shift, and go to state 12
    '('         shift, and go to state 60

    BLK     go to state 61
    DCL     go to state 62
    STMT    go to state 63
    return  go to state 64
    write   go to state 65
    read    go to state 66
    ASSN    go to state 67
    LVAL    go to state 68
    CNTRL   go to state 69
    EXP     go to state 70
    NUM     go to state 71
    CALL    go to state 72


State 37

   12 DCL_OPT: ID . ':' OPTIONAL TYPE
   13        | ID . ',' DCL_OPT
   26 DCL: ID . ':' TYPE
   27    | ID . ',' DCL

    ','  shift, and go to state 25
    ':'  shift, and go to state 26


State 38

   13 DCL_OPT: ID ',' DCL_OPT .

    $default  reduce using rule 13 (DCL_OPT)


State 39

   27 DCL: ID ',' DCL .

    $default  reduce using rule 27 (DCL)


State 40

   12 DCL_OPT: ID ':' OPTIONAL . TYPE

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    VOID   shift, and go to state 6

    TYPE  go to state 73


State 41

   26 DCL: ID ':' TYPE .

    $default  reduce using rule 26 (DCL)


State 42

   63 NUM: INTEGERNUM .

    $default  reduce using rule 63 (NUM)


State 43

   64 NUM: REALNUM .

    $default  reduce using rule 64 (NUM)


State 44

   20 DCL_OPT_VAL: ID ASSIGN NUM . ':' OPTIONAL TYPE
   21            | ID ASSIGN NUM . ',' DCL_OPT_VAL

    ','  shift, and go to state 74
    ':'  shift, and go to state 75


State 45

   12 DCL_OPT: ID . ':' OPTIONAL TYPE
   13        | ID . ',' DCL_OPT

    ','  shift, and go to state 76
    ':'  shift, and go to state 77


State 46

   10 FUNC_DEC_ARGLIST_OPT: FUNC_DEC_ARGLIST_OPT ',' DCL_OPT .

    $default  reduce using rule 10 (FUNC_DEC_ARGLIST_OPT)


State 47

    8 FUNC_DEC_API: TYPE ID '(' FUNC_DEC_ARGLIST_OPT ')' ';' .

    $default  reduce using rule 8 (FUNC_DEC_API)


State 48

   20 DCL_OPT_VAL: ID . ASSIGN NUM ':' OPTIONAL TYPE
   21            | ID . ASSIGN NUM ',' DCL_OPT_VAL

    ASSIGN  shift, and go to state 27


State 49

   18 FUNC_DEF_ARGLIST_OPT: FUNC_DEF_ARGLIST_OPT ',' DCL_OPT_VAL .

    $default  reduce using rule 18 (FUNC_DEF_ARGLIST_OPT)


State 50

    9 FUNC_DEC_API: TYPE ID '(' FUNC_ARGLIST ',' FUNC_DEC_ARGLIST_OPT . ')' ';'
   10 FUNC_DEC_ARGLIST_OPT: FUNC_DEC_ARGLIST_OPT . ',' DCL_OPT

    ','  shift, and go to state 29
    ')'  shift, and go to state 78


State 51

   17 FUNC_DEF_API: TYPE ID '(' FUNC_ARGLIST ',' FUNC_DEF_ARGLIST_OPT . ')'
   18 FUNC_DEF_ARGLIST_OPT: FUNC_DEF_ARGLIST_OPT . ',' DCL_OPT_VAL

    ','  shift, and go to state 31
    ')'  shift, and go to state 79


State 52

   22 FUNC_ARGLIST: FUNC_ARGLIST ',' DCL .

    $default  reduce using rule 22 (FUNC_ARGLIST)


State 53

    7 FUNC_DEC_API: TYPE ID '(' FUNC_ARGLIST ')' ';' .

    $default  reduce using rule 7 (FUNC_DEC_API)


State 54

   43 write: WRITE . '(' EXP ')' ';'
   44      | WRITE . '(' STR ')' ';'

    '('  shift, and go to state 80


State 55

   45 read: READ . '(' LVAL ')' ';'

    '('  shift, and go to state 81


State 56

   50 CNTRL: WHILE . M BEXP DO M STMT

    $default  reduce using rule 70 (M)

    M  go to state 82


State 57

   48 CNTRL: IF . BEXP THEN M STMT ELSE N M STMT
   49      | IF . BEXP THEN M STMT

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    NOT         shift, and go to state 84
    '('         shift, and go to state 85

    BEXP  go to state 86
    EXP   go to state 87
    NUM   go to state 71
    CALL  go to state 72


State 58

   41 return: RETURN . EXP ';'
   42       | RETURN . ';'

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    ';'         shift, and go to state 88
    '('         shift, and go to state 60

    EXP   go to state 89
    NUM   go to state 71
    CALL  go to state 72


State 59

   26 DCL: ID . ':' TYPE
   27    | ID . ',' DCL
   47 LVAL: ID .
   60 EXP: ID .
   65 CALL: ID . '(' CALL_ARGS ')'

    ','  shift, and go to state 90
    ':'  shift, and go to state 91
    '('  shift, and go to state 92

    ASSIGN    reduce using rule 47 (LVAL)
    $default  reduce using rule 60 (EXP)


State 60

   58 EXP: '(' . EXP ')'
   59    | '(' . TYPE ')' EXP

    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6
    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    '('         shift, and go to state 60

    TYPE  go to state 93
    EXP   go to state 94
    NUM   go to state 71
    CALL  go to state 72


State 61

   40 STMT: BLK .

    $default  reduce using rule 40 (STMT)


State 62

   33 STMT: DCL . ';'

    ';'  shift, and go to state 95


State 63

   31 STLIST: STLIST M STMT .

    $default  reduce using rule 31 (STLIST)


State 64

   39 STMT: return .

    $default  reduce using rule 39 (STMT)


State 65

   38 STMT: write .

    $default  reduce using rule 38 (STMT)


State 66

   37 STMT: read .

    $default  reduce using rule 37 (STMT)


State 67

   34 STMT: ASSN .

    $default  reduce using rule 34 (STMT)


State 68

   46 ASSN: LVAL . ASSIGN EXP ';'

    ASSIGN  shift, and go to state 96


State 69

   36 STMT: CNTRL .

    $default  reduce using rule 36 (STMT)


State 70

   35 STMT: EXP . ';'
   56 EXP: EXP . ADDOP EXP
   57    | EXP . MULOP EXP

    ';'    shift, and go to state 97
    ADDOP  shift, and go to state 98
    MULOP  shift, and go to state 99


State 71

   61 EXP: NUM .

    $default  reduce using rule 61 (EXP)


State 72

   62 EXP: CALL .

    $default  reduce using rule 62 (EXP)


State 73

   12 DCL_OPT: ID ':' OPTIONAL TYPE .

    $default  reduce using rule 12 (DCL_OPT)


State 74

   21 DCL_OPT_VAL: ID ASSIGN NUM ',' . DCL_OPT_VAL

    ID  shift, and go to state 48

    DCL_OPT_VAL  go to state 100


State 75

   20 DCL_OPT_VAL: ID ASSIGN NUM ':' . OPTIONAL TYPE

    OPTIONAL  shift, and go to state 101


State 76

   13 DCL_OPT: ID ',' . DCL_OPT

    ID  shift, and go to state 45

    DCL_OPT  go to state 38


State 77

   12 DCL_OPT: ID ':' . OPTIONAL TYPE

    OPTIONAL  shift, and go to state 40


State 78

    9 FUNC_DEC_API: TYPE ID '(' FUNC_ARGLIST ',' FUNC_DEC_ARGLIST_OPT ')' . ';'

    ';'  shift, and go to state 102


State 79

   17 FUNC_DEF_API: TYPE ID '(' FUNC_ARGLIST ',' FUNC_DEF_ARGLIST_OPT ')' .

    $default  reduce using rule 17 (FUNC_DEF_API)


State 80

   43 write: WRITE '(' . EXP ')' ';'
   44      | WRITE '(' . STR ')' ';'

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    STR         shift, and go to state 103
    '('         shift, and go to state 60

    EXP   go to state 104
    NUM   go to state 71
    CALL  go to state 72


State 81

   45 read: READ '(' . LVAL ')' ';'

    ID  shift, and go to state 105

    LVAL  go to state 106


State 82

   50 CNTRL: WHILE M . BEXP DO M STMT

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    NOT         shift, and go to state 84
    '('         shift, and go to state 85

    BEXP  go to state 107
    EXP   go to state 87
    NUM   go to state 71
    CALL  go to state 72


State 83

   60 EXP: ID .
   65 CALL: ID . '(' CALL_ARGS ')'

    '('  shift, and go to state 92

    $default  reduce using rule 60 (EXP)


State 84

   53 BEXP: NOT . BEXP

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    NOT         shift, and go to state 84
    '('         shift, and go to state 85

    BEXP  go to state 108
    EXP   go to state 87
    NUM   go to state 71
    CALL  go to state 72


State 85

   55 BEXP: '(' . BEXP ')'
   58 EXP: '(' . EXP ')'
   59    | '(' . TYPE ')' EXP

    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6
    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    NOT         shift, and go to state 84
    '('         shift, and go to state 85

    TYPE  go to state 93
    BEXP  go to state 109
    EXP   go to state 110
    NUM   go to state 71
    CALL  go to state 72


State 86

   48 CNTRL: IF BEXP . THEN M STMT ELSE N M STMT
   49      | IF BEXP . THEN M STMT
   51 BEXP: BEXP . OR M BEXP
   52     | BEXP . AND M BEXP

    OR    shift, and go to state 111
    AND   shift, and go to state 112
    THEN  shift, and go to state 113


State 87

   54 BEXP: EXP . RELOP EXP
   56 EXP: EXP . ADDOP EXP
   57    | EXP . MULOP EXP

    RELOP  shift, and go to state 114
    ADDOP  shift, and go to state 98
    MULOP  shift, and go to state 99


State 88

   42 return: RETURN ';' .

    $default  reduce using rule 42 (return)


State 89

   41 return: RETURN EXP . ';'
   56 EXP: EXP . ADDOP EXP
   57    | EXP . MULOP EXP

    ';'    shift, and go to state 115
    ADDOP  shift, and go to state 98
    MULOP  shift, and go to state 99


State 90

   27 DCL: ID ',' . DCL

    ID  shift, and go to state 116

    DCL  go to state 39


State 91

   26 DCL: ID ':' . TYPE

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    VOID   shift, and go to state 6

    TYPE  go to state 41


State 92

   65 CALL: ID '(' . CALL_ARGS ')'

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    '('         shift, and go to state 60

    $default  reduce using rule 67 (CALL_ARGS)

    EXP           go to state 117
    NUM           go to state 71
    CALL          go to state 72
    CALL_ARGS     go to state 118
    CALL_ARGLIST  go to state 119


State 93

   59 EXP: '(' TYPE . ')' EXP

    ')'  shift, and go to state 120


State 94

   56 EXP: EXP . ADDOP EXP
   57    | EXP . MULOP EXP
   58    | '(' EXP . ')'

    ADDOP  shift, and go to state 98
    MULOP  shift, and go to state 99
    ')'    shift, and go to state 121


State 95

   33 STMT: DCL ';' .

    $default  reduce using rule 33 (STMT)


State 96

   46 ASSN: LVAL ASSIGN . EXP ';'

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    '('         shift, and go to state 60

    EXP   go to state 122
    NUM   go to state 71
    CALL  go to state 72


State 97

   35 STMT: EXP ';' .

    $default  reduce using rule 35 (STMT)


State 98

   56 EXP: EXP ADDOP . EXP

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    '('         shift, and go to state 60

    EXP   go to state 123
    NUM   go to state 71
    CALL  go to state 72


State 99

   57 EXP: EXP MULOP . EXP

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    '('         shift, and go to state 60

    EXP   go to state 124
    NUM   go to state 71
    CALL  go to state 72


State 100

   21 DCL_OPT_VAL: ID ASSIGN NUM ',' DCL_OPT_VAL .

    $default  reduce using rule 21 (DCL_OPT_VAL)


State 101

   20 DCL_OPT_VAL: ID ASSIGN NUM ':' OPTIONAL . TYPE

    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    VOID   shift, and go to state 6

    TYPE  go to state 125


State 102

    9 FUNC_DEC_API: TYPE ID '(' FUNC_ARGLIST ',' FUNC_DEC_ARGLIST_OPT ')' ';' .

    $default  reduce using rule 9 (FUNC_DEC_API)


State 103

   44 write: WRITE '(' STR . ')' ';'

    ')'  shift, and go to state 126


State 104

   43 write: WRITE '(' EXP . ')' ';'
   56 EXP: EXP . ADDOP EXP
   57    | EXP . MULOP EXP

    ADDOP  shift, and go to state 98
    MULOP  shift, and go to state 99
    ')'    shift, and go to state 127


State 105

   47 LVAL: ID .

    $default  reduce using rule 47 (LVAL)


State 106

   45 read: READ '(' LVAL . ')' ';'

    ')'  shift, and go to state 128


State 107

   50 CNTRL: WHILE M BEXP . DO M STMT
   51 BEXP: BEXP . OR M BEXP
   52     | BEXP . AND M BEXP

    DO   shift, and go to state 129
    OR   shift, and go to state 111
    AND  shift, and go to state 112


State 108

   51 BEXP: BEXP . OR M BEXP
   52     | BEXP . AND M BEXP
   53     | NOT BEXP .

    $default  reduce using rule 53 (BEXP)


State 109

   51 BEXP: BEXP . OR M BEXP
   52     | BEXP . AND M BEXP
   55     | '(' BEXP . ')'

    OR   shift, and go to state 111
    AND  shift, and go to state 112
    ')'  shift, and go to state 130


State 110

   54 BEXP: EXP . RELOP EXP
   56 EXP: EXP . ADDOP EXP
   57    | EXP . MULOP EXP
   58    | '(' EXP . ')'

    RELOP  shift, and go to state 114
    ADDOP  shift, and go to state 98
    MULOP  shift, and go to state 99
    ')'    shift, and go to state 121


State 111

   51 BEXP: BEXP OR . M BEXP

    $default  reduce using rule 70 (M)

    M  go to state 131


State 112

   52 BEXP: BEXP AND . M BEXP

    $default  reduce using rule 70 (M)

    M  go to state 132


State 113

   48 CNTRL: IF BEXP THEN . M STMT ELSE N M STMT
   49      | IF BEXP THEN . M STMT

    $default  reduce using rule 70 (M)

    M  go to state 133


State 114

   54 BEXP: EXP RELOP . EXP

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    '('         shift, and go to state 60

    EXP   go to state 134
    NUM   go to state 71
    CALL  go to state 72


State 115

   41 return: RETURN EXP ';' .

    $default  reduce using rule 41 (return)


State 116

   26 DCL: ID . ':' TYPE
   27    | ID . ',' DCL

    ','  shift, and go to state 90
    ':'  shift, and go to state 91


State 117

   56 EXP: EXP . ADDOP EXP
   57    | EXP . MULOP EXP
   69 CALL_ARGLIST: EXP .

    ADDOP  shift, and go to state 98
    MULOP  shift, and go to state 99

    $default  reduce using rule 69 (CALL_ARGLIST)


State 118

   65 CALL: ID '(' CALL_ARGS . ')'

    ')'  shift, and go to state 135


State 119

   66 CALL_ARGS: CALL_ARGLIST .
   68 CALL_ARGLIST: CALL_ARGLIST . ',' EXP

    ','  shift, and go to state 136

    $default  reduce using rule 66 (CALL_ARGS)


State 120

   59 EXP: '(' TYPE ')' . EXP

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    '('         shift, and go to state 60

    EXP   go to state 137
    NUM   go to state 71
    CALL  go to state 72


State 121

   58 EXP: '(' EXP ')' .

    $default  reduce using rule 58 (EXP)


State 122

   46 ASSN: LVAL ASSIGN EXP . ';'
   56 EXP: EXP . ADDOP EXP
   57    | EXP . MULOP EXP

    ';'    shift, and go to state 138
    ADDOP  shift, and go to state 98
    MULOP  shift, and go to state 99


State 123

   56 EXP: EXP . ADDOP EXP
   56    | EXP ADDOP EXP .
   57    | EXP . MULOP EXP

    MULOP  shift, and go to state 99

    $default  reduce using rule 56 (EXP)


State 124

   56 EXP: EXP . ADDOP EXP
   57    | EXP . MULOP EXP
   57    | EXP MULOP EXP .

    $default  reduce using rule 57 (EXP)


State 125

   20 DCL_OPT_VAL: ID ASSIGN NUM ':' OPTIONAL TYPE .

    $default  reduce using rule 20 (DCL_OPT_VAL)


State 126

   44 write: WRITE '(' STR ')' . ';'

    ';'  shift, and go to state 139


State 127

   43 write: WRITE '(' EXP ')' . ';'

    ';'  shift, and go to state 140


State 128

   45 read: READ '(' LVAL ')' . ';'

    ';'  shift, and go to state 141


State 129

   50 CNTRL: WHILE M BEXP DO . M STMT

    $default  reduce using rule 70 (M)

    M  go to state 142


State 130

   55 BEXP: '(' BEXP ')' .

    $default  reduce using rule 55 (BEXP)


State 131

   51 BEXP: BEXP OR M . BEXP

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    NOT         shift, and go to state 84
    '('         shift, and go to state 85

    BEXP  go to state 143
    EXP   go to state 87
    NUM   go to state 71
    CALL  go to state 72


State 132

   52 BEXP: BEXP AND M . BEXP

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    NOT         shift, and go to state 84
    '('         shift, and go to state 85

    BEXP  go to state 144
    EXP   go to state 87
    NUM   go to state 71
    CALL  go to state 72


State 133

   48 CNTRL: IF BEXP THEN M . STMT ELSE N M STMT
   49      | IF BEXP THEN M . STMT

    WRITE       shift, and go to state 54
    READ        shift, and go to state 55
    WHILE       shift, and go to state 56
    IF          shift, and go to state 57
    RETURN      shift, and go to state 58
    ID          shift, and go to state 59
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    '{'         shift, and go to state 12
    '('         shift, and go to state 60

    BLK     go to state 61
    DCL     go to state 62
    STMT    go to state 145
    return  go to state 64
    write   go to state 65
    read    go to state 66
    ASSN    go to state 67
    LVAL    go to state 68
    CNTRL   go to state 69
    EXP     go to state 70
    NUM     go to state 71
    CALL    go to state 72


State 134

   54 BEXP: EXP RELOP EXP .
   56 EXP: EXP . ADDOP EXP
   57    | EXP . MULOP EXP

    ADDOP  shift, and go to state 98
    MULOP  shift, and go to state 99

    $default  reduce using rule 54 (BEXP)


State 135

   65 CALL: ID '(' CALL_ARGS ')' .

    $default  reduce using rule 65 (CALL)


State 136

   68 CALL_ARGLIST: CALL_ARGLIST ',' . EXP

    ID          shift, and go to state 83
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    '('         shift, and go to state 60

    EXP   go to state 146
    NUM   go to state 71
    CALL  go to state 72


State 137

   56 EXP: EXP . ADDOP EXP
   57    | EXP . MULOP EXP
   59    | '(' TYPE ')' EXP .

    $default  reduce using rule 59 (EXP)


State 138

   46 ASSN: LVAL ASSIGN EXP ';' .

    $default  reduce using rule 46 (ASSN)


State 139

   44 write: WRITE '(' STR ')' ';' .

    $default  reduce using rule 44 (write)


State 140

   43 write: WRITE '(' EXP ')' ';' .

    $default  reduce using rule 43 (write)


State 141

   45 read: READ '(' LVAL ')' ';' .

    $default  reduce using rule 45 (read)


State 142

   50 CNTRL: WHILE M BEXP DO M . STMT

    WRITE       shift, and go to state 54
    READ        shift, and go to state 55
    WHILE       shift, and go to state 56
    IF          shift, and go to state 57
    RETURN      shift, and go to state 58
    ID          shift, and go to state 59
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    '{'         shift, and go to state 12
    '('         shift, and go to state 60

    BLK     go to state 61
    DCL     go to state 62
    STMT    go to state 147
    return  go to state 64
    write   go to state 65
    read    go to state 66
    ASSN    go to state 67
    LVAL    go to state 68
    CNTRL   go to state 69
    EXP     go to state 70
    NUM     go to state 71
    CALL    go to state 72


State 143

   51 BEXP: BEXP . OR M BEXP
   51     | BEXP OR M BEXP .
   52     | BEXP . AND M BEXP

    AND  shift, and go to state 112

    $default  reduce using rule 51 (BEXP)


State 144

   51 BEXP: BEXP . OR M BEXP
   52     | BEXP . AND M BEXP
   52     | BEXP AND M BEXP .

    $default  reduce using rule 52 (BEXP)


State 145

   48 CNTRL: IF BEXP THEN M STMT . ELSE N M STMT
   49      | IF BEXP THEN M STMT .

    ELSE  shift, and go to state 148

    $default  reduce using rule 49 (CNTRL)


State 146

   56 EXP: EXP . ADDOP EXP
   57    | EXP . MULOP EXP
   68 CALL_ARGLIST: CALL_ARGLIST ',' EXP .

    ADDOP  shift, and go to state 98
    MULOP  shift, and go to state 99

    $default  reduce using rule 68 (CALL_ARGLIST)


State 147

   50 CNTRL: WHILE M BEXP DO M STMT .

    $default  reduce using rule 50 (CNTRL)


State 148

   48 CNTRL: IF BEXP THEN M STMT ELSE . N M STMT

    $default  reduce using rule 71 (N)

    N  go to state 149


State 149

   48 CNTRL: IF BEXP THEN M STMT ELSE N . M STMT

    $default  reduce using rule 70 (M)

    M  go to state 150


State 150

   48 CNTRL: IF BEXP THEN M STMT ELSE N M . STMT

    WRITE       shift, and go to state 54
    READ        shift, and go to state 55
    WHILE       shift, and go to state 56
    IF          shift, and go to state 57
    RETURN      shift, and go to state 58
    ID          shift, and go to state 59
    INTEGERNUM  shift, and go to state 42
    REALNUM     shift, and go to state 43
    '{'         shift, and go to state 12
    '('         shift, and go to state 60

    BLK     go to state 61
    DCL     go to state 62
    STMT    go to state 151
    return  go to state 64
    write   go to state 65
    read    go to state 66
    ASSN    go to state 67
    LVAL    go to state 68
    CNTRL   go to state 69
    EXP     go to state 70
    NUM     go to state 71
    CALL    go to state 72


State 151

   48 CNTRL: IF BEXP THEN M STMT ELSE N M STMT .

    $default  reduce using rule 48 (CNTRL)
